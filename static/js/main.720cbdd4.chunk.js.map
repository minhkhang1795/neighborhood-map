{"version":3,"sources":["MapComponent.js","SearchBar.js","SearchResult.js","PanelComponent.js","PlaceAPI.js","App.js","serviceWorker.js","index.js"],"names":["MapComponent","compose","withProps","googleMapURL","loadingElement","react_default","a","createElement","style","height","containerElement","mapElement","withScriptjs","withGoogleMap","props","lib","defaultZoom","defaultCenter","ll","defaultOptions","DEFAULT_OPTION","isMarkerShown","places","constructor","Array","map","place","key","venue","id","position","lat","location","lng","onClick","onMarkerClick","focusedPlace","onCloseClick","onToggleClose","className","tabIndex","name","formattedAddress","bestPhoto","src","prefix","suffix","alt","MyMapComponent","_this","this","onUpdateFocusedPlace","clearFocusedPlace","React","PureComponent","mapTypeControl","styles","featureType","elementType","stylers","visibility","color","lightness","gamma","weight","saturation","hue","SearchBar","isHidden","role","type","aria-label","placeholder","value","query","onChange","e","onQueryChange","Component","SearchResult","handleOnKeyPressed","_this2","onKeyPress","PanelComponent","state","preventDefault","refs","hideButton","setState","ref","openPanel","src_SearchBar","length","src_SearchResult","closePanel","BASE_URL","CLIENT_ID","CLIENT_SECRET","App","getPlaces","trim","long","fetch","concat","then","res","json","data","response","groups","items","catch","PlaceAPI","console","log","index","findIndex","updated","fetchFocusedPlaceDetail","venueID","ctx","showingPlaces","_this3","_this$state","match","RegExp","escapeRegExp","filter","test","src_MapComponent","updateFocusedPlace","src_PanelComponent","updateQuery","target","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","WebFont","load","google","families","ReactDOM","render","BrowserRouter","basename","src_App_0","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"6TAIMA,EAAeC,YACnBC,YAAU,CACRC,aAAc,gIACdC,eAAgBC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,OAAM,UACnCC,iBAAkBL,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,OAAM,UACrCE,WAAYN,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAACC,OAAM,YAEjCG,eACAC,gBARmBZ,CASnB,SAACa,GAAD,OACAT,EAAAC,EAAAC,cAACQ,EAAA,UAAD,CACEC,YAAa,GACbC,cAAeH,EAAMI,GACrBC,eAAgBC,GAGfN,EAAMO,eAAiBP,EAAMQ,QAAUR,EAAMQ,OAAOC,cAAgBC,OAASV,EAAMQ,OAAOG,IAAI,SAACC,GAAD,OAC7FrB,EAAAC,EAAAC,cAACQ,EAAA,OAAD,CAAQY,IAAKD,EAAME,MAAMC,GACjBC,SAAU,CAACC,IAAKL,EAAME,MAAMI,SAASD,IAAKE,IAAKP,EAAME,MAAMI,SAASC,KACpEC,QAAS,kBAAMpB,EAAMqB,cAAcT,EAAME,MAAMC,SAIxDf,EAAMO,eAAiBP,EAAMsB,cAAgBtB,EAAMsB,cAAgBtB,EAAMsB,aAAaJ,UACvF3B,EAAAC,EAAAC,cAACQ,EAAA,WAAD,CAAYe,SAAU,CAACC,IAAKjB,EAAMsB,aAAaJ,SAASD,IAAKE,IAAKnB,EAAMsB,aAAaJ,SAASC,KAClFI,aAAcvB,EAAMwB,eAC9BjC,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,cAAcC,SAAU,GACrCnC,EAAAC,EAAAC,cAAA,UAAKO,EAAMsB,aAAaK,MACxBpC,EAAAC,EAAAC,cAAA,SAAIO,EAAMsB,aAAaJ,SAASU,iBAAiB,IAAM5B,EAAMsB,aAAaJ,SAASU,iBAAiB,GAClG,KAAO5B,EAAMsB,aAAaJ,SAASU,iBAAiB,GAAK,KAC1D5B,EAAMsB,aAAaO,WACpBtC,EAAAC,EAAAC,cAAA,OAAKqC,IAAK9B,EAAMsB,aAAaO,UAAUE,OAA7B,UAAkD/B,EAAMsB,aAAaO,UAAUG,OACpFC,IAAK,YAAcjC,EAAMsB,aAAaK,YAM7CO,mLAEK,IAAAC,EAAAC,KACP,OACE7C,EAAAC,EAAAC,cAACP,EAAD,CACEkB,GAAIgC,KAAKpC,MAAMI,GACfG,cAAe6B,KAAKpC,MAAMO,cAC1BC,OAAQ4B,KAAKpC,MAAMQ,OACnBc,aAAcc,KAAKpC,MAAMsB,aACzBD,cAAe,SAACN,GAAD,OAAQoB,EAAKnC,MAAMqC,qBAAqBtB,IACvDS,cAAeY,KAAKpC,MAAMsC,2BAVLC,IAAMC,eAiB7BlC,EAAiB,CACrBmC,gBAAgB,EAAOC,OAAQ,CAAC,CAC9BC,YAAe,iBACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,SAGhB,CACEH,YAAe,MACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,gBAGlB,CACEH,YAAe,OACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,gBAGlB,CACEH,YAAe,QACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,gBAGlB,CACEH,YAAe,UACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,gBAGlB,CACEH,YAAe,YACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,gBAGlB,CACEH,YAAe,eACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,SAGlB,CACEH,YAAe,aACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,QAGlB,CACEH,YAAe,eACfC,YAAe,WACfC,QAAW,CAAC,CACVC,WAAc,QAGlB,CACEH,YAAe,gBACfC,YAAe,MACfC,QAAW,CAAC,CACVC,WAAc,SAGlB,CACEH,YAAe,QACfC,YAAe,MACfC,QAAW,CAAC,CACVE,MAAS,WAET,CACEC,UAAa,IAEf,CACEC,MAAS,QAIf,CACEN,YAAe,eACfC,YAAe,MACfC,QAAW,CAAC,CACVK,OAAU,IAEV,CACEC,YAAe,IAEjB,CACEH,UAAa,MAInB,CACEL,YAAe,YACfC,YAAe,MACfC,QAAW,CAAC,CACVO,IAAO,WAEP,CACED,WAAc,IAEhB,CACEH,UAAa,SAORd,IC3JAmB,mLAjBJ,IAAAlB,EAAAC,KACP,OACE7C,EAAAC,EAAAC,cAAA,OAAKiC,SAAUU,KAAKpC,MAAMsD,UAAY,EAAI,EAAGC,KAAM,SAAU9B,UAAU,aACrElC,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,8BACblC,EAAAC,EAAAC,cAAA,SAAOiC,SAAUU,KAAKpC,MAAMsD,UAAY,EAAI,EAAG7B,UAAU,kBAClD+B,KAAK,SACLC,aAAY,2BACZC,YAAY,2BACZC,MAAOvB,KAAKpC,MAAM4D,MAClBC,SAAU,SAACC,GAAD,OAAO3B,EAAKnC,MAAM+D,cAAcD,cAVjCE,aC6BTC,6MAxBbC,mBAAqB,SAASJ,EAAGlD,GACjB,UAAVkD,EAAEjD,KACJuB,KAAKpC,MAAMqC,qBAAqBzB,EAAME,MAAMC,6EAGvC,IAAAoD,EAAA/B,KACA5B,EAAU4B,KAAKpC,MAAfQ,OAEP,OACEjB,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,sBACblC,EAAAC,EAAAC,cAAA,MAAIiC,SAAUU,KAAKpC,MAAMsD,UAAY,EAAI,GACtC9C,GAAUA,EAAOC,cAAgBC,OAASF,EAAOG,IAAI,SAACC,GAAD,OACpDrB,EAAAC,EAAAC,cAAA,MAAIiC,SAAUyC,EAAKnE,MAAMsD,UAAY,EAAI,EACrCzC,IAAKD,EAAME,MAAMC,GACjBK,QAAS,kBAAM+C,EAAKnE,MAAMqC,qBAAqBzB,EAAME,MAAMC,KAC3DqD,WAAY,SAACN,GAAD,OAAOK,EAAKD,mBAAmBJ,EAAGlD,KAChDA,EAAME,MAAMa,iBArBCqC,aC0DZK,6MAtDbC,MAAQ,CACNxB,WAAY,kFAGHgB,GACTA,EAAES,iBACFnC,KAAKoC,KAAKC,WAAW/C,UAAY,EACjCU,KAAKsC,SAAS,CAAC5B,WAAY,2CAGnBgB,GACRA,EAAES,iBACFnC,KAAKoC,KAAKC,WAAW/C,SAAW,EAChCU,KAAKsC,SAAS,CAAC5B,WAAY,0CAGpB,IAAAqB,EAAA/B,KACP,OACE7C,EAAAC,EAAAC,cAAA,WAE6B,SAA1B2C,KAAKkC,MAAMxB,YAAyBvD,EAAAC,EAAAC,cAAA,UAAQkF,IAAI,aACJlD,UAAU,iBACVgC,aAAY,cACZrC,QAAS,SAAC0C,GAAD,OAAOK,EAAKS,UAAUd,KAC1EvE,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,sCAIflC,EAAAC,EAAAC,cAAA,OAAKgC,UAAW,iBAAmBW,KAAKkC,MAAMxB,YAC5CvD,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,cACblC,EAAAC,EAAAC,cAACoF,EAAD,CAAWjB,MAAOxB,KAAKpC,MAAM4D,MAClBG,cAAe,SAACD,GAAD,OAAOK,EAAKnE,MAAM+D,cAAcD,IAC/CR,SAAoC,SAA1BlB,KAAKkC,MAAMxB,aAEF,IAA7BV,KAAKpC,MAAMQ,OAAOsE,QAAgBvF,EAAAC,EAAAC,cAAA,KAAGiC,SAAUU,KAAKpC,MAAMsD,UAAY,EAAI,EACrC7B,UAAU,oBADb,qBAGnClC,EAAAC,EAAAC,cAACsF,EAAD,CAAc1C,qBAAsB,SAACtB,GAAD,OAAQoD,EAAKnE,MAAMqC,qBAAqBtB,IAC9DP,OAAQ4B,KAAKpC,MAAMQ,OACnB8C,SAAoC,SAA1BlB,KAAKkC,MAAMxB,cAIrCvD,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,gBACblC,EAAAC,EAAAC,cAAA,UAAQkF,IAAI,aAAalD,UAAU,iBAAiB8B,KAAM,SAAUnC,QAAS,SAAC0C,GAAD,OAAOK,EAAKa,WAAWlB,KAClGvE,EAAAC,EAAAC,cAAA,KAAGgC,UAAU,oCADf,mBA9CiBuC,aCJvBiB,EAAW,iCACfC,EAAY,mDACZC,EAAgB,mDCyFHC,6MAhFbd,MAAQ,CACN9D,OAAQ,GACRc,aAAc,KACdsC,MAAO,uFAIPxB,KAAKiD,UAAU,8CAGLzB,GACVxB,KAAKsC,SAAS,CAACd,MAAOA,EAAM0B,2CAGpB1B,GAAO,IAAAO,EAAA/B,MDpBI,SAACnB,EAAKsE,EAAM3B,GAAZ,OACrB4B,MAAK,GAAAC,OAAIR,EAAJ,+BAAAQ,OAA0CP,EAA1C,mBAAAO,OAAqEN,EAArE,4BAAAM,OAA6GxE,EAA7G,KAAAwE,OAAoHF,EAApH,WAAAE,OAAkI7B,IACpI8B,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAASC,OAAO,GAAGC,QACrCC,MAAM,SAAAnC,GAAC,OAAIA,KCiBZoC,CAnBQ,YAAkB,WAmBCtC,GAAO8B,KAAK,SAAClF,GACtC2F,QAAQC,IAAI5F,GACZ2D,EAAKO,SAAS,CAAClE,OAAQA,iDAIRO,GACjB,IAAIP,EAAS4B,KAAKkC,MAAM9D,OAClB6F,EAAQ7F,EAAO8F,UAAU,SAAA1F,GAAK,OAAIA,EAAME,MAAMC,KAAOA,IACvDsF,GAAS,IACXjE,KAAKsC,SAAS,CAACpD,aAAcd,EAAO6F,GAAOvF,QACtCN,EAAO6F,GAAOvF,MAAMyF,SACvBnE,KAAKoE,wBAAwBzF,EAAIsF,EAAO7F,oDAKtBO,EAAIsF,EAAO7F,GACjC,IDjCuBiG,ECiCjBC,EAAMtE,MDjCWqE,ECkCH1F,EDjCtByE,MAAK,GAAAC,OAAIR,EAAJ,YAAAQ,OAAuBgB,EAAvB,gBAAAhB,OAA6CP,EAA7C,mBAAAO,OAAwEN,EAAxE,gBACFO,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GAAI,OAAIA,EAAKC,SAAShF,QAC3BmF,MAAM,SAAAnC,GAAC,OAAIA,KC8BY4B,KAAK,SAAC5E,GAC5BqF,QAAQC,IAAItF,GACRA,GAASA,EAAMI,WACjBV,EAAO6F,GAAOvF,MAAQA,EACtBN,EAAO6F,GAAOvF,MAAMyF,SAAU,EAC9BG,EAAIhC,SAAS,CAAClE,OAAQA,EAAQc,aAAcR,OAE7CmF,MAAM,SAACnC,GACRqC,QAAQC,IAAItC,iDAKd1B,KAAKsC,SAAS,CAACpD,aAAc,wCAGtB,IAGHqF,EAHGC,EAAAxE,KAAAyE,EAC+BzE,KAAKkC,MAApC9D,EADAqG,EACArG,OAAQc,EADRuF,EACQvF,aAAcsC,EADtBiD,EACsBjD,MAG7B,GAAIA,EAAO,CACT,IAAMkD,EAAQ,IAAIC,OAAOC,IAAapD,GAAQ,KAC9C+C,EAAgBnG,EAAOyG,OAAO,SAACrG,GAAD,OAAWkG,EAAMI,KAAKtG,EAAME,MAAMa,aAEhEgF,EAAgBnG,EAGlB,OACEjB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgC,UAAU,iBACblC,EAAAC,EAAAC,cAAC0H,EAAD,CAAgB/G,GAAI,CAACa,IApEnB,WAoE6BE,KApEX,YAqEJZ,eAAe,EACf8B,qBAAsB,SAACtB,GAAD,OAAQ6F,EAAKQ,mBAAmBrG,IACtDP,OAAQmG,EACRrF,aAAcA,EACdgB,kBAAmB,kBAAMsE,EAAKtE,wBAEhD/C,EAAAC,EAAAC,cAAC4H,EAAD,CAAgB7G,OAAQmG,EACR/C,MAAOA,EACPG,cAAe,SAACD,GAAD,OAAO8C,EAAKU,YAAYxD,EAAEyD,OAAO5D,QAChDtB,qBAAsB,SAACtB,GAAD,OAAQ6F,EAAKQ,mBAAmBrG,cA5E5DiD,aCCZwD,EAAcC,QACW,cAA7BC,OAAOxG,SAASyG,UAEe,UAA7BD,OAAOxG,SAASyG,UAEhBD,OAAOxG,SAASyG,SAASb,MACvB,2DAsCN,SAASc,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTnC,KAAK,SAAAwC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9D,QACfyD,UAAUC,cAAcO,YAK1BpC,QAAQC,IAAI,6CAGR0B,EAAOU,UACTV,EAAOU,SAASN,KAMlB/B,QAAQC,IAAI,sCAGR0B,EAAOW,WACTX,EAAOW,UAAUP,SAO5BjC,MAAM,SAAAyC,GACLvC,QAAQuC,MAAM,4CAA6CA,yBCjFjEC,EAAQC,KAAK,CACXC,OAAQ,CACNC,SAAU,CAAC,aAAc,iBAI7BC,IAASC,OAAOzJ,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,CAAeC,SAAS,sBAAqB3J,EAAAC,EAAAC,cAAC0J,EAAD,OAAyBC,SAASC,eAAe,SDMvG,SAAkBvB,GACvB,GAAI,kBAAmBC,UAAW,CAGhC,GADkB,IAAIuB,IAAIC,oBAAwB7B,OAAOxG,UAC3CsI,SAAW9B,OAAOxG,SAASsI,OAIvC,OAGF9B,OAAO+B,iBAAiB,OAAQ,WAC9B,IAAM5B,EAAK,GAAApC,OAAM8D,oBAAN,sBAEP/B,GA2DV,SAAiCK,EAAOC,GAEtCtC,MAAMqC,GACHnC,KAAK,SAAAI,GAGkB,MAApBA,EAAS4D,SACuD,IAAhE5D,EAAS6D,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C9B,UAAUC,cAAc8B,MAAMpE,KAAK,SAAAwC,GACjCA,EAAa6B,aAAarE,KAAK,WAC7BgC,OAAOxG,SAAS8I,aAKpBpC,EAAgBC,EAAOC,KAG1B7B,MAAM,WACLE,QAAQC,IACN,mEA/EA6D,CAAwBpC,EAAOC,GAI/BC,UAAUC,cAAc8B,MAAMpE,KAAK,WACjCS,QAAQC,IACN,+GAMJwB,EAAgBC,EAAOC,MC7B/BE","file":"static/js/main.720cbdd4.chunk.js","sourcesContent":["import React from \"react\"\nimport {compose, withProps} from \"recompose\"\nimport {withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow} from \"react-google-maps\"\n\nconst MapComponent = compose(\n  withProps({\n    googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCx7CZ1P0YdqirwlJ4jPdrMO20NQwSPkbI&v=3.exp&libraries=geometry,drawing,places\",\n    loadingElement: <div style={{height: `100%`}}/>,\n    containerElement: <div style={{height: `100%`}}/>,\n    mapElement: <div style={{height: `100%`}}/>,\n  }),\n  withScriptjs,\n  withGoogleMap\n)((props) =>\n  <GoogleMap\n    defaultZoom={15}\n    defaultCenter={props.ll}\n    defaultOptions={DEFAULT_OPTION}>\n\n    {/* Add markers based on props.places. onMarkerClick() updates focusedPlace in the parent component */}\n    {props.isMarkerShown && props.places && props.places.constructor === Array && props.places.map((place) =>\n      <Marker key={place.venue.id}\n              position={{lat: place.venue.location.lat, lng: place.venue.location.lng}}\n              onClick={() => props.onMarkerClick(place.venue.id)}>\n      </Marker>)}\n\n    {/* Add info window of the focused place */}\n    {props.isMarkerShown && props.focusedPlace && props.focusedPlace && props.focusedPlace.location &&\n    <InfoWindow position={{lat: props.focusedPlace.location.lat, lng: props.focusedPlace.location.lng}}\n                onCloseClick={props.onToggleClose}>\n      <div className=\"info-window\" tabIndex={0}>\n        <h3>{props.focusedPlace.name}</h3>\n        <p>{props.focusedPlace.location.formattedAddress[0] + (props.focusedPlace.location.formattedAddress[1] ?\n          ', ' + props.focusedPlace.location.formattedAddress[1] : '')}</p>\n        {props.focusedPlace.bestPhoto &&\n        <img src={props.focusedPlace.bestPhoto.prefix + `300x300` + props.focusedPlace.bestPhoto.suffix}\n             alt={`Image of ` + props.focusedPlace.name}/>}\n      </div>\n    </InfoWindow>}\n  </GoogleMap>\n);\n\nclass MyMapComponent extends React.PureComponent {\n\n  render() {\n    return (\n      <MapComponent\n        ll={this.props.ll}\n        isMarkerShown={this.props.isMarkerShown}\n        places={this.props.places}\n        focusedPlace={this.props.focusedPlace}\n        onMarkerClick={(id) => this.props.onUpdateFocusedPlace(id)}\n        onToggleClose={this.props.clearFocusedPlace}\n      />\n    )\n  }\n}\n\n// Map style\nconst DEFAULT_OPTION = {\n  mapTypeControl: false, styles: [{\n    \"featureType\": \"administrative\",\n    \"elementType\": \"all\",\n    \"stylers\": [{\n      \"visibility\": \"off\"\n    }]\n  },\n    {\n      \"featureType\": \"poi\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"simplified\"\n      }]\n    },\n    {\n      \"featureType\": \"road\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"simplified\"\n      }]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"simplified\"\n      }]\n    },\n    {\n      \"featureType\": \"transit\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"simplified\"\n      }]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"simplified\"\n      }]\n    },\n    {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    },\n    {\n      \"featureType\": \"road.local\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }]\n    },\n    {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"geometry\",\n      \"stylers\": [{\n        \"visibility\": \"on\"\n      }]\n    },\n    {\n      \"featureType\": \"road.arterial\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"visibility\": \"off\"\n      }]\n    },\n    {\n      \"featureType\": \"water\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"color\": \"#5f94ff\"\n      },\n        {\n          \"lightness\": 26\n        },\n        {\n          \"gamma\": 5.86\n        }\n      ]\n    },\n    {\n      \"featureType\": \"road.highway\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"weight\": 0.6\n      },\n        {\n          \"saturation\": -85\n        },\n        {\n          \"lightness\": 61\n        }\n      ]\n    },\n    {\n      \"featureType\": \"landscape\",\n      \"elementType\": \"all\",\n      \"stylers\": [{\n        \"hue\": \"#0066ff\"\n      },\n        {\n          \"saturation\": 74\n        },\n        {\n          \"lightness\": 100\n        }\n      ]\n    }\n  ]\n};\n\nexport default MyMapComponent","import React, {Component} from 'react';\n\nclass SearchBar extends Component {\n  render() {\n    return (\n      <div tabIndex={this.props.isHidden ? -1 : 0} role={'search'} className=\"panel-top\">\n        <i className=\"fas fa-search common-icon\"/>\n        <input tabIndex={this.props.isHidden ? -1 : 0} className=\"searchbar-input\"\n               type=\"search\"\n               aria-label={'Search your neighborhood'}\n               placeholder=\"Search your neighborhood\"\n               value={this.props.query}\n               onChange={(e) => this.props.onQueryChange(e)}\n        />\n      </div>\n    )\n  }\n\n}\n\nexport default SearchBar","import React, {Component} from 'react';\n\nclass SearchResult extends Component {\n\n  /*\n  Function to handle Enter key pressed on a list item\n   */\n  handleOnKeyPressed = function(e, place) {\n    if (e.key === \"Enter\")\n      this.props.onUpdateFocusedPlace(place.venue.id);\n  };\n\n  render() {\n    const {places} = this.props;\n\n    return (\n      <div className=\"search-result-grid\">\n        <ol tabIndex={this.props.isHidden ? -1 : 0}>\n          {places && places.constructor === Array && places.map((place) =>\n            <li tabIndex={this.props.isHidden ? -1 : 0}\n                key={place.venue.id}\n                onClick={() => this.props.onUpdateFocusedPlace(place.venue.id)}\n                onKeyPress={(e) => this.handleOnKeyPressed(e, place)}\n            >{place.venue.name}</li>\n          )}\n        </ol>\n      </div>\n    )\n  }\n}\n\nexport default SearchResult","import React, {Component} from 'react';\nimport SearchBar from \"./SearchBar\";\nimport SearchResult from \"./SearchResult\";\n\nclass PanelComponent extends Component {\n\n  state = {\n    visibility: 'show'\n  };\n\n  closePanel(e) {\n    e.preventDefault();\n    this.refs.hideButton.tabIndex = -1;\n    this.setState({visibility: 'hide'});\n  }\n\n  openPanel(e) {\n    e.preventDefault();\n    this.refs.hideButton.tabIndex = 0;\n    this.setState({visibility: 'show'});\n  }\n\n  render() {\n    return (\n      <div>\n        {/* Open button to show the sliding panel */}\n        {this.state.visibility === 'hide' && <button ref=\"showButton\"\n                                                     className=\"panel-show-btn\"\n                                                     aria-label={'show button'}\n                                                     onClick={(e) => this.openPanel(e)}>\n          <i className=\"fas fa-chevron-right common-icon\"/>\n        </button>}\n\n        {/* Search bar and result list go here*/}\n        <div className={'panel-content ' + this.state.visibility}>\n          <div className=\"panel-main\">\n            <SearchBar query={this.props.query}\n                       onQueryChange={(e) => this.props.onQueryChange(e)}\n                       isHidden={this.state.visibility === 'hide'}/>\n\n            {this.props.places.length === 0 && <p tabIndex={this.props.isHidden ? -1 : 0}\n                                                  className=\"filter-no-result\">No results found.</p>}\n\n            <SearchResult onUpdateFocusedPlace={(id) => this.props.onUpdateFocusedPlace(id)}\n                          places={this.props.places}\n                          isHidden={this.state.visibility === 'hide'}/>\n          </div>\n\n          {/* Close button to hide the panel */}\n          <div className=\"panel-bottom\">\n            <button ref=\"hideButton\" className=\"panel-hide-btn\" role={'button'} onClick={(e) => this.closePanel(e)}>\n              <i className=\"fas fa-chevron-left common-icon\"/> Hide\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PanelComponent","const BASE_URL = \"https://api.foursquare.com/v2/\",\n  CLIENT_ID = \"VE10SB3UPIQ23AG3G5AIEHOPDIQKWO1BZXZTK3LOI0HWTS4G\",\n  CLIENT_SECRET = \"RUWR5CLLYIUMKWN3X1W0P2VX1KRQALEIPR4SPRWSN3C4W0PU\";\n\n\nexport const explore = (lat, long, query) =>\n  fetch(`${BASE_URL}/venues/explore/?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20180323&limit=25&ll=${lat},${long}&query=${query}`)\n    .then(res => res.json())\n    .then(data => data.response.groups[0].items)\n    .catch(e => e);\n\nexport const getDetails = (venueID) =>\n  fetch(`${BASE_URL}/venues/${venueID}/?client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&v=20180323`)\n    .then(res => res.json())\n    .then(data => data.response.venue)\n    .catch(e => e);","import React, {Component} from 'react';\nimport './App.css';\nimport escapeRegExp from 'escape-string-regexp'\nimport MyMapComponent from \"./MapComponent\";\nimport PanelComponent from \"./PanelComponent\";\nimport * as PlaceAPI from './PlaceAPI'\n\nconst lat = 42.3784207, lng = -71.1304621;\n\nclass App extends Component {\n\n  state = {\n    places: [],\n    focusedPlace: null,\n    query: ''\n  };\n\n  componentDidMount() {\n    this.getPlaces('coffee');\n  }\n\n  updateQuery(query) {\n    this.setState({query: query.trim()});\n  }\n\n  getPlaces(query) {\n    PlaceAPI.explore(lat, lng, query).then((places) => {\n      console.log(places);\n      this.setState({places: places});\n    });\n  }\n\n  updateFocusedPlace(id) {\n    let places = this.state.places;\n    const index = places.findIndex(place => place.venue.id === id);\n    if (index >= 0) {\n      this.setState({focusedPlace: places[index].venue});\n      if (!places[index].venue.updated) {\n        this.fetchFocusedPlaceDetail(id, index, places); // Fetch data from Foursquare\n      }\n    }\n  }\n\n  fetchFocusedPlaceDetail(id, index, places) {\n    const ctx = this;\n    PlaceAPI.getDetails(id).then((venue) => {\n      console.log(venue);\n      if (venue && venue.location) {\n        places[index].venue = venue;\n        places[index].venue.updated = true; // Flag to indicate that this venue is already fetched\n        ctx.setState({places: places, focusedPlace: venue});\n      }\n    }).catch((e) => {\n      console.log(e)\n    });\n  }\n\n  clearFocusedPlace() {\n    this.setState({focusedPlace: null});\n  }\n\n  render() {\n    const {places, focusedPlace, query} = this.state;\n\n    let showingPlaces;\n    if (query) {\n      const match = new RegExp(escapeRegExp(query), 'i');\n      showingPlaces = places.filter((place) => match.test(place.venue.name));\n    } else {\n      showingPlaces = places;\n    }\n\n    return (\n      <div>\n        <div className=\"map-container\">\n          <MyMapComponent ll={{lat: lat, lng: lng}}\n                          isMarkerShown={true}\n                          onUpdateFocusedPlace={(id) => this.updateFocusedPlace(id)}\n                          places={showingPlaces}\n                          focusedPlace={focusedPlace}\n                          clearFocusedPlace={() => this.clearFocusedPlace()}/>\n        </div>\n        <PanelComponent places={showingPlaces}\n                        query={query}\n                        onQueryChange={(e) => this.updateQuery(e.target.value)}\n                        onUpdateFocusedPlace={(id) => this.updateFocusedPlace(id)}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n  google: {\n    families: ['Montserrat', 'sans-serif']\n  }\n});\n\nReactDOM.render(<BrowserRouter basename=\"/neighborhood-map/\"><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}